#####################
## Changelog
#####################
[changelog]
header = """
# Changelog

"""
body = """
{% if version %}\
	# [{{ version | trim_start_matches(pat="v") }}]\
	{% if previous %}\
		{% if previous.version %}\
			(https://github.com/dfm88/fastapi-two-factor-authentication/compare/{{ previous.version }}...{{ version }})\
		{% else %}\
			(https://github.com/dfm88/fastapi-two-factor-authentication/tree/{{ version }})\
		{% endif %}\
	{% endif %} \
	- ({{ timestamp | date(format="%Y-%m-%d") }})
{% else %}\
	# [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
	## {{ group | upper_first }}
  {% for commit in commits %}
      - {% if commit.scope %}\
          **{{commit.scope}}:** \
        {% endif %}\
        {{ commit.message | upper_first  }} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/dfm88/fastapi-two-factor-authentication/commit/{{ commit.id }}))  - ({{ commit.author.name }})\
      {% if commit.body %}\
          \n{{ commit.body }}\
      {% endif %}\
      {% if commit.breaking %}\
          {% for breakingChange in commit.footers %}\
              \n{% raw %}  {% endraw %}- **{{ breakingChange.token }}{{ breakingChange.separator }}** {{ breakingChange.value }}\
          {% endfor %}\
      {% endif %}\
  {% endfor %}
{% endfor %}\n
"""
trim = true
footer = """
<!-- generated by git-cliff -->
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/dfm88/fastapi-two-factor-authentication/issues/${2}))"},
    { pattern = "Merge pull request #([0-9]+) from [^ ]+", replace = "PR [#${1}](https://github.com/dfm88/fastapi-two-factor-authentication/pull/${1}):"},
]
commit_parsers = [
    { message = "(?i)^feat", group = "<!-- 0 -->🚀 Features"},
    { message = "(?i)^fix", group = "<!-- 1 -->🐛 Bug Fixes"},
    { message = "(?i)^refactor", group = "<!-- 2 -->🚜 Refactor"},
    { message = "(?i)^doc", group = "<!-- 3 -->📚 Documentation"},
    { message = "(?i)^perf", group = "<!-- 4 -->⚡ Performance"},
    { message = "(?i)^style", group = "<!-- 5 -->🎨 Styling"},
    { message = "(?i)^test", group = "<!-- 6 -->🧪 Testing"},
    { message = "(?i)^chore", group = "<!-- 7 -->⚙️ Miscellaneous Tasks"},
    { body = ".*security", group = "<!-- 8 -->🛡️ Security"},
    { message = "(?i)^upgrade", group = "<!-- 9 -->⬆️ Upgrades"},
    { message = "(?i)^downgrade", group = "<!-- 10 -->⬇️ Downgrades"},
    { message = "(?i)^revert", group = "<!-- 11 -->⏪ Reverts"},
    { message = "(?i)^release", group = "<!-- 12 -->🔖 Releases"},
    { message = "(?i)^bump", group = "<!-- 13 -->📦 Bumps"},
    { message = "(?i)^initial", group = "<!-- 14 -->🎉 Initial Commit"},
    { message = "(?i)^init", group = "<!-- 15 -->🎉 Initial Commit"},
    { message = "(?i)^add", group = "<!-- 16 -->➕ Add"},
    { message = "(?i)^create", group = "<!-- 16 -->➕ Add"},
    { message = "(?i)^remove", group = "<!-- 17 -->➖ Remove"},
    { message = "(?i)^delete", group = "<!-- 17 -->➖ Remove"},
    { message = "(?i)^rename", group = "<!-- 18 -->📝 Rename"},
    { message = "(?i)^move", group = "<!-- 19 -->📂 Move"},
    { message = "(?i)^copy", group = "<!-- 20 -->📋 Copy"},
    { message = "(?i)^fixup", group = "<!-- 21 -->🔧 Fixup"},
    { message = "(?i)^wip", group = "<!-- 22 -->🚧 WIP"},
    { message = "(?i)^rework", group = "<!-- 23 -->🔨 Rework"},
    { message = "(?i)^cleanup", group = "<!-- 24 -->🧹 Cleanup"},
    { message = "(?i)^format", group = "<!-- 25 -->🎨 Format"},
    { message = "(?i)^style", group = "<!-- 25 -->🎨 Format"},
    { message = "(?i)^lint", group = "<!-- 25 -->🎨 Format"},
    { message = "(?i)^update", group = "<!-- 26 -->🔄 Update"},
    { message = "(?i)^pin", group = "<!-- 27 -->📌 Pin"},
    { message = "(?i)^unpin", group = "<!-- 28 -->📍 Unpin"},
    { message = "(?i)^build", group = "<!-- 29 -->👷 CI/CD"},
    { message = ".*", group = "<!-- 30 -->📝 Other"},
    { message = "(?i)^merge", group = "<!-- 31 -->🔀 Merges"},
]
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "[0-9]*"
# regex for skipping tags
skip_tags = ""
# regex for ignoring tags
ignore_tags = ""
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
# limit the number of commits included in the changelog.
# limit_commits = 400
